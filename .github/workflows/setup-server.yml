name: setup

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup with SSH Action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_2 }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            SERVER=${{ secrets.HOST_2 }}
            DJANGO_SETTINGS_MODULE="dploy.settings.prod"
            DJANGO_SECRET_KEY="${{ secrets.SECRET_KEY }}"

            echo -e "\n>>> Setting up $SERVER"
            apt-get -qq update

            echo -e "\n>>> Upgrading apt packages"
            apt-get -qq upgrade

            echo -e "\n>>> Installing apt packages"
            apt-get -qq install python3-pip dos2unix tree

            echo -e "\n>>> Setting up project folder"
            mkdir -p /app/logs

            echo -e "\n>>> Creating our virtualenv"
            if [[ ! -d "/app/env" ]]
            then
              python3 -m venv /app/env
            else
              echo ">>> Skipping virtualenv creation - already present"
            fi

            echo -e "\n>>> Setting system enviromental variables"
            if [[ "\$DJANGO_SETTINGS_MODULE" != "$DJANGO_SETTINGS_MODULE" ]]
            then
              echo DJANGO_SETTINGS_MODULE="dploy.settings.prod" >> /etc/environment
            else
              echo ">>> Skipping DJANGO_SETTINGS_MODULE - already present"
            fi

            if [[ "\$DJANGO_SECRET_KEY" != "$DJANGO_SECRET_KEY" ]]
            then
              echo DJANGO_SECRET_KEY >> /etc/environment
            else
              echo ">>> Skipping DJANGO_SECRET_KEY - already present"
            fi

            echo -e ">>> Cloning repository"
            mkdir /root/deploy
            cd /root/deploy
            git clone https://github.com/skipglide/django-deployment.git
            
            echo -e ">>> Copying to app folder"
            cp /root/deploy/django-deploy/ /app/
            mv /app/django-deployment/config /app/
            mv /app/django-deployment/scripts /app/
            mv /app/django-deployment/dockerfiles /app/
            mv /app/django-deployment/requirements.txt /app/

            echo -e "\n>>> Installing Python packages"
            cd /app/
            . env/bin/activate
            pip install -r /app/requirements.txt

            echo -e "\n>>> Running Django migrations"
            pushd django-deployment
            ./manage.py migrate

            echo -e "\n>>> Collecting static files"
            ./manage.py collectstatic
            popd

            echo -e ">>> Starting supervisord"
            supervisord -c config/supervisord.conf

            echo -e "\n>>> Done setting up $SERVER"
